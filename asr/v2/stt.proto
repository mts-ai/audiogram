syntax = "proto3";

import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";

package mts.ai.audiogram.stt.v2;

// ==== [begin] Voice Activity [begin] ====
message VoiceActivityMark {
  enum VoiceActivityMarkType {
    VA_MARK_NONE = 0;
    VA_MARK_BEGIN = 1;
    VA_MARK_END = 2;
  }

  VoiceActivityMarkType mark_type = 1;
  uint64 offset_ms = 2;
}

enum VoiceActivityDetectionAlgorithmUsage {
  USE_VAD = 0;
  DO_NOT_PERFORM_VOICE_ACTIVITY = 1;
  USE_DEP = 2;
}

enum VoiceActivityMarkEventsMode {
  VA_DISABLE = 0;
  VA_ENABLE = 1;
  VA_ENABLE_ASYNC = 2;
}

message VADOptions {
  enum VoiceActivityDetectionMode {
    VAD_MODE_DEFAULT = 0;
    SPLIT_BY_PAUSES = 1;
    ONLY_SPEECH = 2;
  }
  float threshold = 1;
  int32 speech_pad_ms = 2;
  uint32 min_silence_ms = 3;
  uint32 min_speech_ms = 4;
  VoiceActivityDetectionMode mode = 5;
}

message DEPOptions {
  float smoothed_window_threshold = 1;
  int32 smoothed_window_ms = 2;
}

message VoiceActivityConfig {
  VoiceActivityDetectionAlgorithmUsage usage = 1;
  oneof algo_options {
    VADOptions vad_options = 2;
    DEPOptions dep_options = 3;
  }
}
// ==== [end] Voice Activity [end] ====

enum AudioEncoding {
  ENCODING_UNSPECIFIED = 0;
  LINEAR_PCM = 1;
  FLAC = 2;
  MULAW = 3;
  ALAW = 20;
}

enum AttackType {
  LOGICAL = 0;
  PHYSICAL = 1;
  ALL_TYPES = 2;
}

message AntiSpoofingConfig {
  AttackType type = 1;
  oneof false_rate_type {
    float FAR = 2;
    float FRR = 3;
  }
  uint32 max_duration_for_analysis_ms = 4;
}

message RecognitionConfig {
  AudioEncoding encoding = 1;
  int32 sample_rate_hertz = 2;
  string language_code = 3;
  int32 max_alternatives = 4;
  int32 audio_channel_count = 7;
  bool enable_word_time_offsets = 8;
  bool enable_automatic_punctuation = 11;
  string model = 13;
  VoiceActivityConfig va_config = 14;
  VoiceActivityMarkEventsMode va_response_mode = 15;
  bool enable_genderage = 16;
  bool split_by_channel = 17;
  bool enable_antispoofing = 19;
  AntiSpoofingConfig antispoofing_config = 20;
}

message StreamingRecognitionConfig {
  reserved 4;
  RecognitionConfig config = 1;
  bool single_utterance = 2;
  bool interim_results = 3;
}

message StreamingRecognizeRequest {
  oneof streaming_request {
    StreamingRecognitionConfig streaming_config = 1;
    bytes audio = 2;
  }
}

message RecognitionAudio {
  oneof audio_source {
    bytes audio = 1;
    string uri = 2;
  }
}

message RecognizeRequest {
  RecognitionConfig config = 1;
  RecognitionAudio audio_content = 2;
}

message LongRunningRecognizeRequest {
  RecognitionConfig config = 1;
  RecognitionAudio audio_content = 2;
}

message RecognizeResponse {
  repeated SpeechRecognitionResult results = 1;
}

message StreamingRecognizeResponse {
  repeated StreamingRecognitionResult results = 1;
}

message EmotionsRecognition {
  float positive = 1;
  float neutral = 2;
  float negative_angry = 3;
  float negative_sad = 4;
}

message SpeakerGenderAgePrediction {
  enum GenderClass {
    GENDER_UNDEF = 0;
    GENDER_MALE = 1;
    GENDER_FEMALE = 2;
  }

  enum AgeClass {
    AGE_UNDEF = 0;
    AGE_ADULT = 1;
    AGE_CHILD = 2;
  }

  GenderClass gender = 1;
  AgeClass age = 2;
  EmotionsRecognition emotion = 3;
}

message SpoofingResult {
  enum AttackResult {
    ATTACK_DETECTED = 0;
    GENUINE = 1;
  }
  AttackType type = 1;
  AttackResult result = 2;
  float confidence = 3;
  uint64 start_time_ms = 4;
  uint64 end_time_ms = 5;
}

message SpeechRecognitionAlternative {
  message WordInfo {
    google.protobuf.Duration start_time = 1;
    google.protobuf.Duration end_time = 2;
    string word = 3;
    float confidence = 4;
  }
  string transcript = 1;
  float confidence = 2;
  repeated WordInfo words = 3;
  google.protobuf.Duration start_time = 4;
  google.protobuf.Duration end_time = 5;
}

message StreamingRecognitionResult {
  SpeechRecognitionResult result = 1;
  bool is_final = 2;
}

message SpeechRecognitionResult {
  repeated SpeechRecognitionAlternative alternatives = 1;
  int32 channel = 2;
  repeated VoiceActivityMark va_marks = 3;
  SpeakerGenderAgePrediction genderage = 4;
  repeated SpoofingResult spoofing_result = 5;
}

message ModelsInfo {
  repeated ModelInfo models = 1;
}

message ModelInfo {
  string name = 1;
  uint32 sample_rate_hertz = 2;
  string language_code = 3;
}

service STT {
  rpc Recognize(RecognizeRequest) returns (RecognizeResponse);
  rpc StreamingRecognize (stream StreamingRecognizeRequest) returns (stream StreamingRecognizeResponse);
  rpc GetModelsInfo(google.protobuf.Empty) returns (ModelsInfo);
}