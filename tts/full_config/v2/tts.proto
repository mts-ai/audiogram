syntax = "proto3";

package mts.ai.audiogram.tts.v2;

import "google/protobuf/empty.proto";

enum AudioEncoding {
    ENCODING_UNSPECIFIED = 0;
    LINEAR_PCM = 1;
    FLAC = 2;
    MULAW = 3;
    ALAW = 20;
}

enum VoiceStyle {
    VOICE_STYLE_NEUTRAL = 0; 
    VOICE_STYLE_HAPPY = 1; 
    VOICE_STYLE_ANGRY = 2; 
    VOICE_STYLE_SAD = 3; 
    VOICE_STYLE_SURPRISED = 4; 
}

message SynthesizeOptions {
    message CustomSynthesizeOptionValue {
        oneof kind {
            int32 int32_value = 1;
            int64 int64_value = 2;
            double number_value = 3;
            string string_value = 4;
            bool bool_value = 5;
        }
    }

    enum PostprocessingMode {
        POST_PROCESSING_DISABLE = 0;
        POST_PROCESSING_PHONE_CHANNEL = 1;
        POST_PROCESSING_PRETTIFY = 2;
    }

    reserved 1;

    string model_type = 2;
    uint32 model_sample_rate_hertz = 3;

    reserved 4;

    VoiceStyle voice_style = 5;

    reserved 6;

    PostprocessingMode postprocessing_mode = 7;

    reserved 8;
    reserved 9;

    map<string, CustomSynthesizeOptionValue> custom_options = 11;
}

message SynthesizeSpeechRequest {
    oneof input_source {
        string text = 1;
        string ssml = 2;
    }
    string language_code = 3;
    AudioEncoding encoding = 4;
    int32 sample_rate_hertz = 5;
    string voice_name = 6;
    SynthesizeOptions synthesize_options = 7;
}

message ResponseHeader {
    uint64 timestamp = 1;
}

message StreamingSynthesizeSpeechResponse {
    bytes audio = 1;
    ResponseHeader header = 2;
}

message SynthesizeSpeechResponse {
    bytes audio = 1;
    ResponseHeader header = 2;
}

message ModelsInfo {
    repeated ModelInfo models = 1;
    ResponseHeader header = 2;
}

message ModelInfo {
    string name = 1;
    uint32 sample_rate_hertz = 2;
    string language_code = 3;
    string type = 4;
}

service TTS {
    rpc StreamingSynthesize (SynthesizeSpeechRequest) returns (stream StreamingSynthesizeSpeechResponse);
    rpc Synthesize (SynthesizeSpeechRequest) returns (SynthesizeSpeechResponse);
    rpc GetModelsInfo (google.protobuf.Empty) returns (ModelsInfo);
}
